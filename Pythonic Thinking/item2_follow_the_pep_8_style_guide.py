"""
PEP 8 IS A STYLE GUIDE ON HOW TO FORMAT PYTHON CODE
CLICK THE LINK BELOW GET THE STYLE GUILDE LINE 
IT MAKES OTHER DEVELOPER EASY TO READ CODE
https://peps.python.org/pep-0008/
"""

""" WHITESPACE """
#FOR INTENDATION USE LINE SPACES NOT TABS
#FOUR SPACES SHOULD BE GIVEN FOR INDENTING
#IN ONE LINE THERE SHOULD BE LESS THAN 80 CHARACTERS
#IF YOU HAVE LONG EXPRESSION AND THEN WHEN CHANGING LINE THE BELOW LINE SHOULD GET FOUR EXTRA SPACES
#FUNCTIONS AND CLASSES SHOULD HAVE TWO BLANK LINES
#IN A CLASS METHOD SHOULD BE SEPERATED BY ONE EXTRA LINES
#IN DICTIONARY NO WHITESPACE BETWEEN KEY AND COLON SHOULD BE GIVEN 
# BUT ONLY ONE WHITESPACE BEFORE AND AFTER THE = SIGN 

""" NAMING """
# FUNCTIONS, VARIABLE AND ATTRIBUTES SHOULD BE IN LOWERCASE UNDERSCORE FORMAT
# FOR PROTECTED INSTANCE ATTRIBUTES THERE SHOULD BE _ ONE LEADING UNDERSCORE
# FOR PRIVATE INSTANCE ATTRIBUTES THERE SHOULD BE __ DOUBLE LEADING UNDERSCORE
# CLASSES SHOUD BE IN CAPITALIZED FORMAT
# MODUE LEVEL CONSTANTS SHOULD BE IN ALL_CAPS FORMAT
# INSTANCE METHODS IN CLASSES SHOULD USE self, WHICH REFERS TO THE OBJECT, AS THE NAME OF THE FIRST PARAMETER
# CLASS METHODS SHOULD USE cls, which refers to the class, as the name of the first paramater

"""EXPRESSION AND STATMENT"""
# use if not a is b       avoid if a is not b
# for checking empty lists and string use if not somelist
# don't use single line if while for statement spread it into multiple lines
# if you can't ifr an expression on one line, support it with parentheses and add line breaks and intendation to make it easier to read
# prefer suppording multiline expression with parentheses over using the \line continuation character

"""How to use \ for multiline expression"""



"""IMPORTS"""
#from bar import foo
"""RELATIVE IMPORTS"""
#from . import foo

"""NOTE"""
# USE PYLINT TOOL TO GET PEP 8 STYLE GUIDE
# SEARCH : "https://www.pylint.org"
